<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="parcMaterielDataSet" targetNamespace="http://tempuri.org/parcMaterielDataSet.xsd" xmlns:mstns="http://tempuri.org/parcMaterielDataSet.xsd" xmlns="http://tempuri.org/parcMaterielDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="parcMaterielConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="parcMaterielConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.aideInventaire.Properties.Settings.GlobalReference.Default.parcMaterielConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CatégorieTableAdapter" GeneratorDataComponentClassName="CatégorieTableAdapter" Name="Catégorie" UserDataComponentName="CatégorieTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="parcMaterielConnectionString (Settings)" DbObjectName="parcMateriel.dbo.Catégorie" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Catégorie] WHERE (([idCat] = @Original_idCat) AND ([libCat] = @Original_libCat))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idCat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idCat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_libCat" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="libCat" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Catégorie] ([libCat]) VALUES (@libCat);
SELECT idCat, libCat FROM Catégorie WHERE (idCat = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@libCat" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="libCat" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idCat, libCat FROM dbo.Catégorie</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Catégorie] SET [libCat] = @libCat WHERE (([idCat] = @Original_idCat) AND ([libCat] = @Original_libCat));
SELECT idCat, libCat FROM Catégorie WHERE (idCat = @idCat)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@libCat" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="libCat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idCat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idCat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_libCat" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="libCat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idCat" ColumnName="idCat" DataSourceName="parcMateriel.dbo.Catégorie" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idCat" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idCat" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idCat" DataSetColumn="idCat" />
              <Mapping SourceColumn="libCat" DataSetColumn="libCat" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LocationTableAdapter" GeneratorDataComponentClassName="LocationTableAdapter" Name="Location" UserDataComponentName="LocationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="parcMaterielConnectionString (Settings)" DbObjectName="parcMateriel.dbo.Location" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Location] WHERE (([idLoc] = @Original_idLoc) AND ([libLoc] = @Original_libLoc))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idLoc" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idLoc" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_libLoc" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="libLoc" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Location] ([libLoc]) VALUES (@libLoc);
SELECT idLoc, libLoc FROM Location WHERE (idLoc = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@libLoc" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="libLoc" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idLoc, libLoc FROM dbo.Location</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Location] SET [libLoc] = @libLoc WHERE (([idLoc] = @Original_idLoc) AND ([libLoc] = @Original_libLoc));
SELECT idLoc, libLoc FROM Location WHERE (idLoc = @idLoc)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@libLoc" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="libLoc" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idLoc" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idLoc" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_libLoc" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="libLoc" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idLoc" ColumnName="idLoc" DataSourceName="parcMateriel.dbo.Location" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idLoc" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idLoc" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idLoc" DataSetColumn="idLoc" />
              <Mapping SourceColumn="libLoc" DataSetColumn="libLoc" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MaterielTableAdapter" GeneratorDataComponentClassName="MaterielTableAdapter" Name="Materiel" UserDataComponentName="MaterielTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="parcMaterielConnectionString (Settings)" DbObjectName="parcMateriel.dbo.Materiel" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Materiel] ([libMat], [idCat], [numSerie], [nbInstance], [idLoc]) VALUES (@libMat, @idCat, @numSerie, @nbInstance, @idLoc)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@libMat" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="libMat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idCat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idCat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@numSerie" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="numSerie" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@nbInstance" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nbInstance" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idLoc" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idLoc" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idMat, libMat, idCat, numSerie, nbInstance, idLoc FROM dbo.Materiel</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idMat" DataSetColumn="idMat" />
              <Mapping SourceColumn="libMat" DataSetColumn="libMat" />
              <Mapping SourceColumn="idCat" DataSetColumn="idCat" />
              <Mapping SourceColumn="numSerie" DataSetColumn="numSerie" />
              <Mapping SourceColumn="nbInstance" DataSetColumn="nbInstance" />
              <Mapping SourceColumn="idLoc" DataSetColumn="idLoc" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="parcMaterielDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="parcMaterielDataSet" msprop:Generator_UserDSName="parcMaterielDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Catégorie" msprop:Generator_TableClassName="CatégorieDataTable" msprop:Generator_TableVarName="tableCatégorie" msprop:Generator_TablePropName="Catégorie" msprop:Generator_RowDeletingName="CatégorieRowDeleting" msprop:Generator_RowChangingName="CatégorieRowChanging" msprop:Generator_RowEvHandlerName="CatégorieRowChangeEventHandler" msprop:Generator_RowDeletedName="CatégorieRowDeleted" msprop:Generator_UserTableName="Catégorie" msprop:Generator_RowChangedName="CatégorieRowChanged" msprop:Generator_RowEvArgName="CatégorieRowChangeEvent" msprop:Generator_RowClassName="CatégorieRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idCat" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidCat" msprop:Generator_ColumnPropNameInRow="idCat" msprop:Generator_ColumnPropNameInTable="idCatColumn" msprop:Generator_UserColumnName="idCat" type="xs:int" />
              <xs:element name="libCat" msprop:Generator_ColumnVarNameInTable="columnlibCat" msprop:Generator_ColumnPropNameInRow="libCat" msprop:Generator_ColumnPropNameInTable="libCatColumn" msprop:Generator_UserColumnName="libCat">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Location" msprop:Generator_TableClassName="LocationDataTable" msprop:Generator_TableVarName="tableLocation" msprop:Generator_TablePropName="Location" msprop:Generator_RowDeletingName="LocationRowDeleting" msprop:Generator_RowChangingName="LocationRowChanging" msprop:Generator_RowEvHandlerName="LocationRowChangeEventHandler" msprop:Generator_RowDeletedName="LocationRowDeleted" msprop:Generator_UserTableName="Location" msprop:Generator_RowChangedName="LocationRowChanged" msprop:Generator_RowEvArgName="LocationRowChangeEvent" msprop:Generator_RowClassName="LocationRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idLoc" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidLoc" msprop:Generator_ColumnPropNameInRow="idLoc" msprop:Generator_ColumnPropNameInTable="idLocColumn" msprop:Generator_UserColumnName="idLoc" type="xs:int" />
              <xs:element name="libLoc" msprop:Generator_ColumnVarNameInTable="columnlibLoc" msprop:Generator_ColumnPropNameInRow="libLoc" msprop:Generator_ColumnPropNameInTable="libLocColumn" msprop:Generator_UserColumnName="libLoc">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Materiel" msprop:Generator_TableClassName="MaterielDataTable" msprop:Generator_TableVarName="tableMateriel" msprop:Generator_TablePropName="Materiel" msprop:Generator_RowDeletingName="MaterielRowDeleting" msprop:Generator_RowChangingName="MaterielRowChanging" msprop:Generator_RowEvHandlerName="MaterielRowChangeEventHandler" msprop:Generator_RowDeletedName="MaterielRowDeleted" msprop:Generator_UserTableName="Materiel" msprop:Generator_RowChangedName="MaterielRowChanged" msprop:Generator_RowEvArgName="MaterielRowChangeEvent" msprop:Generator_RowClassName="MaterielRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idMat" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidMat" msprop:Generator_ColumnPropNameInRow="idMat" msprop:Generator_ColumnPropNameInTable="idMatColumn" msprop:Generator_UserColumnName="idMat" type="xs:int" />
              <xs:element name="libMat" msprop:Generator_ColumnVarNameInTable="columnlibMat" msprop:Generator_ColumnPropNameInRow="libMat" msprop:Generator_ColumnPropNameInTable="libMatColumn" msprop:Generator_UserColumnName="libMat">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="idCat" msprop:Generator_ColumnVarNameInTable="columnidCat" msprop:Generator_ColumnPropNameInRow="idCat" msprop:Generator_ColumnPropNameInTable="idCatColumn" msprop:Generator_UserColumnName="idCat" type="xs:int" />
              <xs:element name="numSerie" msprop:Generator_ColumnVarNameInTable="columnnumSerie" msprop:Generator_ColumnPropNameInRow="numSerie" msprop:Generator_ColumnPropNameInTable="numSerieColumn" msprop:Generator_UserColumnName="numSerie">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="nbInstance" msprop:Generator_ColumnVarNameInTable="columnnbInstance" msprop:Generator_ColumnPropNameInRow="nbInstance" msprop:Generator_ColumnPropNameInTable="nbInstanceColumn" msprop:Generator_UserColumnName="nbInstance" type="xs:int" />
              <xs:element name="idLoc" msprop:Generator_ColumnVarNameInTable="columnidLoc" msprop:Generator_ColumnPropNameInRow="idLoc" msprop:Generator_ColumnPropNameInTable="idLocColumn" msprop:Generator_UserColumnName="idLoc" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Catégorie" />
      <xs:field xpath="mstns:idCat" />
    </xs:unique>
    <xs:unique name="Location_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Location" />
      <xs:field xpath="mstns:idLoc" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="fkCat" msdata:parent="Catégorie" msdata:child="Materiel" msdata:parentkey="idCat" msdata:childkey="idCat" msprop:Generator_UserChildTable="Materiel" msprop:Generator_ChildPropName="GetMaterielRows" msprop:Generator_UserRelationName="fkCat" msprop:Generator_ParentPropName="CatégorieRow" msprop:Generator_RelationVarName="relationfkCat" msprop:Generator_UserParentTable="Catégorie" />
      <msdata:Relationship name="fkLocation" msdata:parent="Location" msdata:child="Materiel" msdata:parentkey="idLoc" msdata:childkey="idLoc" msprop:Generator_UserChildTable="Materiel" msprop:Generator_ChildPropName="GetMaterielRows" msprop:Generator_UserRelationName="fkLocation" msprop:Generator_ParentPropName="LocationRow" msprop:Generator_RelationVarName="relationfkLocation" msprop:Generator_UserParentTable="Location" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>